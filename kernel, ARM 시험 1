난이도 : ☆☆☆
1.  Multi-Tasking의 원리에 대해 서술하시오.(배점 1.6점)
    (Run Queue, Wait Queue, CPU에 기초하여 서술하시오)

CPU의 프로세스는 동시의 여러개의 일을 수행할수 없고 하나씩 수행한다.
CPU는 Multi-Tasking을 위해 자원을 할당받은 태스크를 Run Queue에 
자원을 할당받기를 기다리며 대기하는 태스크를 Wait Queue에 넣어 상태전이(=문맥 교환?)
시키며 Multi-Tasking을 수행한다.

난이도 : ☆
2.  OS는 모든 Resource를 무엇으로 관리하는가 ?(배점 1점)



난이도 : ☆☆☆
3.  System Call Mechanism에 대해 기술하시오.(배점 1.6점)

난이도 : ☆☆
4.  IPC 통신을 사용해야 하는 이유에 대해 기술하시오.(배점 1점)

난이도 : ☆☆☆
5.  Process와 VM과의 관계에 대해 기술하시오.(배점 1.6점)

난이도 : ☆☆☆☆☆
6.  인자로 파일을 입력 받아 해당 파일의 앞 부분 5줄을 출력하고(배점 3점)
    추가적으로 뒷 부분의 5줄을 출력하는 프로그램을 작성하시오.

난이도 : ☆☆☆
7.  임의의 파일을 읽어 해당 파일의 read, write, execution 권한을 조사하는 프로그램을 작성하시오.(배점 1.6점)
    이때 User가 read가 가능 하다면 R, write가 가능하면 W, execution이 가능하면 X를 표기하시오.
    Group과 제 3자에 대해서는 일절 신경쓰지 않도록 한다.

난이도 : ☆
8.  Linux에서 숨김 파일은 어떻게 만드는지에 대해 기술하시오.(배점 1점)

난이도 : ☆☆☆☆
9.  디렉토리 내에 들어 있는 모든 File들을 출력하는 Program을 작성하시오.(배점 3점)

난이도 : ☆☆
10. Linux에서 fork()를 수행하면 Process를 생성한다.(배점 1점)
    이때 부모 프로세스를 gdb에서 디버깅하고자하면 어떤 명령어를 입력해야 하는가 ?

난이도 : ☆☆☆
11. C.O.W Architecture에 대해 기술하시오.(배점 1.6점)
fork는 실행하면 실행에 필요한 부분만 복사하게 하고, vfork는 

난이도 : ☆☆
12. fork()와 execve()의 차이에 대해 기술하시오.(배점 1점)

난이도 : ☆☆☆
13. Blocking 연산과 Non-Blocking 연산의 차이점에 대해 기술하시오.(배점 1점)

난이도 : ☆☆
14. stat(argv[2], &buf)일때 stat System Call을 통해 채운 buf.st_mode의 값에 대해 기술하시오.(배점 1점)

난이도 : ☆☆☆
15. 프로세스들은 최소 메모리를 관리하기 위한 mm, 파일 디스크립터인 fd_array,(배점 1.6점)
    그리고 signal을 포함하고 있는데 그 이유에 대해 기술하시오.

난이도 : ☆☆☆
16. 자식이 정상 종료되었는지 비정상 종료되었는지 파악하는 프로그램을 작성하시오.(배점 3점)

난이도 : ☆☆
17. 아래와 같은 소스코드가 동작할 때의 결과를 적고(배점 1점)
    왜 그러한 결과가 나오는지 기술하시오.

    #include <unistd.h>

    int main(void)
    {
        execlp("ps", "ps", "-e", "-f", 0);
        printf("after\n");
        return 0;
    }

난이도 : ☆☆☆☆
18. 데몬 프로세스를 작성하시오.(배점 3점)
    잠시 동안 데몬이 아니고 영구히 데몬이 되게 하시오.

난이도 : ☆☆☆
19. void (* signal(int signo, void (* handler)(void)))(void)의 Prototype에 대해 기술하시오.(배점 1점)

난이도 : ☆☆
20. signal System Call의 반환값이 무엇인지 쓰시오.(배점 1점)

난이도 : ☆☆☆
21. SIGINT는 무시하고 SIGQUIT을 맞으면 죽는 프로그램을 작성하시오.(배점 3점)
SIGINT	2	종료	터미널 인터럽트 신호.
SIGQUIT	3	종료 (코어 덤프)	터미널 종료 신호.

난이도 : ☆☆
22. signal을 무시하는 프로그램도 이것만은 무시할 수 없는데 그것이 무엇인지 쓰시오.(배점 1점)
SIGKILL	9	종료	킬 (신호를 잡거나 무시할 수 없음).

난이도 : ☆☆
23. goto는 굉장히 유용한 C언어 문법이다.(배점 1점)
    그러나 어떤 경우에는 goto를 쓰기가 힘든 경우가 존재한다.
    이 경우가 언제인지 기술하시오.

난이도 : ☆☆☆
24. 23번에 해당하는 경우 문제를 어떤식으로 해결 해야 하는지 프로그래밍 해보시오.(배점 3점)

난이도 : ☆☆☆☆☆☆
25. 369 게임을 작성하시오.(배점 10점)
    2초내에 값을 입력하게 하시오.
    박수를 쳐야 하는 경우를 Ctrl + C를 누르도록 한다.
    2초내에 값을 입력하지 못할 경우 게임이 오버되게 한다.
    Ctrl + C를 누르면 "Clap!"이라는 문자열이 출력되게 한다.

난이도 : ☆☆☆
26. malloc()은 동적 할당을 수행하는 연산이다.(배점 1.6점)
    이 연산을 빈번하게 사용할 경우 프로그램의 성능이 하락하게 된다.
    어떠한 이유로 프로그램의 성능이 하락하게 되는지 기술하시오.

난이도 : ☆☆☆☆
27. 26번에서 설명하였듯이 malloc()을 자주 사용하는 것은 좋지 않다.(배점 3점)
    malloc()의 사용을 최소한으로 줄이는 방식으로 프로그래밍을 해보시오.

난이도 : ☆☆☆☆☆
28. Message Queue를 통해 Process간의 통신을 구현하시오.(배점 10점)
    Client와 Server 각각을 구현하고 Client가 exit를 입력하면 빠져나가도록 하시오.
    Client를 동작시킬때 반드시 Nickname을 입력해야하며
    실제 채팅을 'hi'라고 입력하게되면 아래와 같은 형태로 유지되게 한다.
    [Nickname]:=:hi

난이도 : ☆☆☆☆☆
29. Shared Memory를 통해 임의의 파일을 읽고 그 내용을 공유하도록 프로그래밍하시오.(배점 10점)

난이도 : ☆☆☆
30. Semaphore에 대해 기술하시오.(배점 1.6점)

난이도 : ☆☆☆☆
31. IPC(Inter-Process Communication)인 프로세스간 통신 Mechanism에 대해 기술하시오.(배점 1.6점)
    (좀 더 구체적으로 Shared Memory가 어떻게 메모리를 공유할 수 있는지 기술하시오)


난이도 : ☆☆☆☆☆☆
32. 파이프 통신을 구현하고 c type.c라고 입력할 경우(배점 10점) 디렉토리를
    현재 위치의 디렉토리에 type.c 파일을 생성하도록 프로그래밍하시오.


난이도 : ☆☆
33. 현재 디렉토리에서 숨겨져 있는 파일들과 하위 모두 확인하고 싶다.(배점 1점)
    어떠한 명령어를 입력하면 이를 확인할 수 있을까 ?


난이도 : ☆
34. 프로그래밍중 파일의 이름을 잘못 만들었다.(배점 1점)
    원래는 orig.c로 만들어야 하는데 실수로 orih.c로 만들었다.
    이를 다시 원래 원하던 형태로 바꾸는 방법에 대해 기술하시오.
mv orig.c orih.c

난이도 : ☆
35. vi 명령어에서 가로로 창을 분할하고자 할 경우와(배점 1점)
    세로로 창을 분할하고자 하는 경우 어떤 명령을 입력하는지 적으시오.
split vsplit
난이도 : ☆
36. 35번 상황에서 한개의 창을 최대로 키우기 위해서는 어떻게 해야할까 ?(배점 1점)

난이도 : ☆
37. 36번에서 최대로 키웠을 때 다시 원상 복구하는 방법은 ?(배점 1점)

난이도 : ☆
38. signal의 정보에 대해 볼 수 있는 명령어는 ?(배점 1점)
vi -t task_struct


난이도 : ☆☆
39. 리눅스에서 말하는 File Descriptor(fd)란 무엇인가 ?(배점 1.6점)


난이도 : ☆☆☆
40. 자신이 사용하는 리눅스 커널의 버전을 확인해보고(배점 1점)
    ftp://ftp.kernel.org/pub/linux/v2.6/$(자신의 버전).tar.bz2를 다운받아보고
    이 압축된 파일을 압축 해제해보도록 한다.

tar -zxvf aaa.tar.gz
 -c 파일을 tar로 묶음
 -p 파일 권한을 저장
 -v 묶거나 파일을 풀 때 과정을 화면으로 출력
 -f 파일 이름을 지정
 -C 경로를 지정
 -x tar 압축을 풂
 -z gzip으로 압축하거나 해제함

난이도 : ☆☆
41. 좀비 프로세스에 대해 기술하시오.(배점 1점)
실행이 종료되었지만 아직 삭제 되지 않은 프로세스 

종료되었지만 삭제되지 않았다는 뜻에 대해서 알아보도도록 하자. 보통 프로세스는 exit 시스템함수를 호출함으로써, 프로세스를 종료시킬려고 한다. 그리고 자신의 모든 자원을 해제 시키게 된다. 그러나 프로세스의 exit status 상태와 PID는 여전히 남아서(커널의 task struct에) 유지되게 된다. 이렇게 하는 몇가지 이유가 있는데, 이렇게 함으로써 부모 프로세스는 자식프로세스에 대한 종료상태등을 가져올수 있어서 자신의 자식프로세스가 어떤 상태로 작업을 마쳤는지에 대한 정보를 확인할수 있기 때문이다. 만약 프로세스가 exit 를 호출하는 즉시 모든 자원을 되돌려줌과 동시에 커널에서 task struct 에서 프로세스 정보를 삭제시켜 버린다면, 부모프로세스는 자신의 자식 프로세스가 어떤 상태로 종료되었는지 알수 없게 될것이다.
https://www.joinc.co.kr/w/Site/system_programing/process/Zombie


난이도 : ☆☆☆☆
42. 여러분이 Linux System Programming을 배우면서 알고 있는 리눅스 명령어들에 대해 기술하시오.(배점 3점)
    (10개 이상을 적고하고 사용 방법을 적으시오)
ls :  
mv : 
cp : 
gcc : 
gdb : 
echo :
cd : 
tar : 
find : 
grep : 
pwd : 

http://hotpotato.tistory.com/92
http://izzang65.tistory.com/1009
https://www.joinc.co.kr/w/Site/system_programing/process/Zombie

