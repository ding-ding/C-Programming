인터럽트
* 인터럽트란 주변 장치와 커널이 통신하는 방식중 의 하나로, 주변 장치나 CPU가 자신에게 발생한 사건을 리눅스 커널에게 알리는 매커니즘이다.

* 인터럽트가 발생하면 작업을 처리하는 함수를 인터럽트 핸들러 라고 부른다
	- 네트워크 장치 인터럽트라면 TCP/IP 스택
	
* 원인에 따라 크게 두가지로 구분
- 외부 인터럽트 : 현재 수행중인 태스크와 관련 없는 주변장치에서 발생된 비동기적인 하드웨어적인 사건
- 내부 인터럽트 : 현재 수행중인 태스크와 관련 있는 즉 동기적으로 발생하는 사건
	ex) 0으로 나누는 연산(devide_by_zero), 세그멘테이션 결함, 페이지 결함, 보호 결함, 시스템 호출

- 모든 CPU는 인터럽트가 발생하면 program counter(or instruction pointer) 레지스터의 갑을 미리 정해진 특정 번지로 변경하도록 정해져 있다. ARM 계열 CPU는 (0x00000000+offset)번지로 점프한다.

- offset은 인터럽트의 종류에 따라 결정되는데 reset 인터럽트인 경우 offset은 0
					 undefined instruction 인 경우 4
					 software interrupt 인 경우 8

- 인터럽트 핸들러는 4Byte보다 크므로 0x000000 번지에 실제 reset인터럽트 핸들러를 기록하는 대신 다른위치에 인터럽트 핸들러를 작성해 두고, 0x00000000 번지에는 reset 인터럽트 핸들러로 점프하는 명령어만 기록

- 인터럽트 처리를 위한 루틴을 함수로 구현해 놓은 뒤, 각 함수의 시작 주소를 리눅스의 IDT(IVT) idt_table 배열에 기록

- 0~31까지 32개의 엔트리를 CPU의 '내부 인터럽트' 핸들러를 위해 할당하고, 그외의 엔트리는 '외부 인터럽트'의 핸들러를 위해 사용

- 외부 인터럽트를 발생 시킬 수 있는 주변 장치들은 하드웨어적으로 PIC(Program-mable Interrupt Controller)라는 칩의 각 핀에 연결되어 있다.

- +

